{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/HW1.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/MessagesList.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/MessagesList.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","message","avatar","width","height","src","alt","dialog_figure","dialog","content_message","nick","name","time","MessagesList","messages","map","item","messageData","userMessages","HW1","useState","setMessages","userMessage","setUserMessage","main_content","type","value","onChange","event","target","input_message","onClick","newMessages","push","addMessage","Affair","priorityClass","affair","priority","status_high","status_middle","status_low","container","title","status","buttonDelete","deleteAffairCallback","_id","Affairs","mappedAffairs","data","a","key","buttonFilter","setFilter","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","setNameCallbackEnterKey","lostFocus","s","dialogForm","onKeyPress","onBlur","disabled","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","nameUser","currentTarget","trim","HW3","setUsers","newUsers","v1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.9b6a0510.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8S8YJ\",\"avatar\":\"Message_avatar__27b-i\",\"dialog\":\"Message_dialog__Uc3ek\",\"dialog_figure\":\"Message_dialog_figure__2WAfj\",\"content_message\":\"Message_content_message__NlFgu\",\"nick\":\"Message_nick__2ZJVK\",\"time\":\"Message_time__3MbNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Affair_container__2W9cZ\",\"title\":\"Affair_title__1iH4G\",\"status\":\"Affair_status__11hP-\",\"status_high\":\"Affair_status_high__3g4lX\",\"status_middle\":\"Affair_status_middle__2GT17\",\"status_low\":\"Affair_status_low__3ZbeB\",\"buttonDelete\":\"Affair_buttonDelete__EqJuT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__3B3bD\",\"buttonFilter\":\"Affairs_buttonFilter__2l5Dk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Greeting_container__1BLJV\",\"errorMessage\":\"Greeting_errorMessage__p_oax\",\"dialogForm\":\"Greeting_dialogForm__1vo9V\",\"error\":\"Greeting_error__3p0pe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_content\":\"HW1_main_content__1UxOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__XSR6K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"MessagesList_messages__3xnUO\"};","import React from 'react'\r\nimport {MessageDataType} from \"./HW1\";\r\nimport style from'./Message.module.css'\r\n\r\nexport const Message = (props: MessageDataType) => {\r\n    return (\r\n        <li className={style.message}>\r\n\r\n            <img\r\n                className={style.avatar}\r\n                width=\"50\"\r\n                height=\"50\"\r\n                src={props.avatar}\r\n                alt=\"avatar user\"\r\n            />\r\n            <div className={style.dialog_figure} />\r\n            <div className={style.dialog}>\r\n\r\n                <div className={style.content_message}>\r\n                    <div className={style.nick}>{props.name}</div>\r\n                    {props.message}\r\n                </div>\r\n\r\n                <div className={style.time}>{props.time}</div>\r\n            </div>\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport {Message} from \"./Message\"\r\nimport {MessageDataType} from \"./HW1\"\r\nimport style from \"./MessagesList.module.css\";\r\n\r\ntype PropsMessagesListType = {\r\n    messages: MessageDataType[]\r\n}\r\n\r\nexport const MessagesList = (props: PropsMessagesListType) => {\r\n    return (\r\n        <ul className={style.messages}>\r\n            {props.messages.map((item) => {\r\n                return (\r\n                    <Message avatar={item.avatar}\r\n                             name={item.name}\r\n                             message={item.message}\r\n                             time={item.time}\r\n                    />\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {MessagesList} from \"./MessagesList\";\r\nimport style from './HW1.module.css'\r\n\r\nexport type MessageDataType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nconst messageData: MessageDataType = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nconst userMessages: MessageDataType[] = []\r\n\r\nfunction HW1() {\r\n\r\n    const [messages, setMessages] = useState<MessageDataType[]>(userMessages)\r\n    const [userMessage, setUserMessage] = useState<string>('')\r\n\r\n    function addMessage(message: string) {\r\n        const newMessages = [...messages]\r\n        newMessages.push({...messageData, message})\r\n        setMessages(newMessages)\r\n        setUserMessage('')\r\n    }\r\n\r\n    function changeHandler(event: React.ChangeEvent<HTMLInputElement>) {\r\n        setUserMessage(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            <div className={style.main_content}>\r\n                <MessagesList\r\n                    messages={messages}\r\n                />\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={userMessage}\r\n                        onChange={changeHandler}\r\n                        className={style.input_message}\r\n                    />\r\n                    <button\r\n                        onClick={() => addMessage(userMessage)}>\r\n                        send\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport style from './Affair.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        return props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    let priorityClass = '';\r\n    if (props.affair.priority === 'high') priorityClass = style.status_high\r\n    else if (props.affair.priority === 'middle') priorityClass = style.status_middle\r\n    else if (props.affair.priority === 'low') priorityClass = style.status_low\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <span className={style.title}>{props.affair.name}</span>\r\n            <span className={`${style.status} ${priorityClass}`}> [{props.affair.priority}]</span>\r\n            <button className={style.buttonDelete} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport style from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (valueFilter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.setFilter('all') // need to fix\r\n    const setHigh = () => props.setFilter('high')\r\n    const setMiddle = () => props.setFilter('middle')\r\n    const setLow = () => props.setFilter('low')\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={style.buttonFilter} onClick={setAll}>All</button>\r\n            <button className={style.buttonFilter} onClick={setHigh}>High</button>\r\n            <button className={style.buttonFilter} onClick={setMiddle}>Middle</button>\r\n            <button className={style.buttonFilter} onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[]  => { // need to fix any\r\n    //Заменил логику, поскольку typescript предполагает, что функция может ничего не возвращать.\r\n    // Тогда бы пришлось добавлять тип возвращения функции void\r\n    if (filter === 'high') return affairs.filter(item => item.priority === filter)\r\n    else if (filter === 'low') return affairs.filter(item => item.priority === filter)\r\n    else if (filter === 'middle') return affairs.filter(item => item.priority === filter)\r\n    return affairs\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\r\n    return affairs.filter((item: AffairType) => item._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent, FocusEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    setNameCallbackEnterKey: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    lostFocus: (e: FocusEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, setNameCallbackEnterKey, lostFocus} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : '' // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.dialogForm}>\r\n                <input value={name}\r\n                       onChange={setNameCallback}\r\n                       onKeyPress={setNameCallbackEnterKey}\r\n                       onBlur={lostFocus}\r\n                       className=\"inputClass\" />\r\n                <button onClick={addUser} disabled={!name}>add</button>\r\n                <span>{totalUsers}</span>\r\n            </div>\r\n\r\n            <span className={s.errorMessage}>{error}</span>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState, KeyboardEvent, FocusEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (nameUser: string) => void // need to fix any\r\n}\r\nconst ERROR_MESSAGE = 'Enter user name correct!'\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        const nameUser = e.currentTarget.value.trim()\r\n        setName(nameUser) // need to fix\r\n        if (!nameUser) {\r\n            setError(ERROR_MESSAGE)\r\n            return\r\n        }\r\n        setError('')\r\n    }\r\n\r\n    const setNameCallbackEnterKey = (e: KeyboardEvent<HTMLInputElement>) => { // need to fix any\r\n        if (e.key !== 'Enter') {\r\n            return\r\n        }\r\n        addUser()\r\n    }\r\n\r\n    const lostFocus = (e: FocusEvent<HTMLInputElement>) => { // need to fix any\r\n        const nameUser = e.currentTarget.value.trim()\r\n        if (!nameUser) setError(ERROR_MESSAGE)\r\n    }\r\n\r\n    const addUser = () => {\r\n        if (!name) return\r\n        addUserCallback(name)\r\n        alert(`Hello ${name} !`) // need to fix\r\n        setName('')\r\n        setError(ERROR_MESSAGE)\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            setNameCallbackEnterKey={setNameCallbackEnterKey}\r\n            lostFocus={lostFocus}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const newUsers = [...users, {_id: v1(), name}]\r\n        setUsers(newUsers) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}